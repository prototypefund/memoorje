/* tslint:disable */
/* eslint-disable */
/**
 * Memoorje API
 * Sicherer, selbstverwalteter digitaler Nachlass f√ºr alle
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Default serializer used for user registration. It will use these:
 * 
 * * User fields
 * * :ref:`user-hidden-fields-setting` setting
 * * :ref:`user-public-fields-setting` setting
 * 
 * to automagically generate the required serializer fields.
 * @export
 * @interface DefaultRegisterUser
 */
export interface DefaultRegisterUser {
    /**
     * 
     * @type {number}
     * @memberof DefaultRegisterUser
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof DefaultRegisterUser
     */
    password: string;
    /**
     * 
     * @type {string}
     * @memberof DefaultRegisterUser
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof DefaultRegisterUser
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof DefaultRegisterUser
     */
    passwordConfirm: string;
}

export function DefaultRegisterUserFromJSON(json: any): DefaultRegisterUser {
    return DefaultRegisterUserFromJSONTyped(json, false);
}

export function DefaultRegisterUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): DefaultRegisterUser {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'password': json['password'],
        'email': json['email'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'passwordConfirm': json['passwordConfirm'],
    };
}

export function DefaultRegisterUserToJSON(value?: DefaultRegisterUser | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'password': value.password,
        'email': value.email,
        'name': value.name,
        'passwordConfirm': value.passwordConfirm,
    };
}


